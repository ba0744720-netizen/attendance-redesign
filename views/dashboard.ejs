<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>PGP Attendance Tracker</title>
<style>
* { margin: 0; padding: 0; box-sizing: border-box; }
body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
.header { background: linear-gradient(135deg, #003d82 0%, #0055b8 100%); color: white; padding: 20px 30px; display: flex; justify-content: space-between; align-items: center; }
.header h1 { font-size: 24px; }
.menu-btn { background: none; border: none; color: white; font-size: 24px; cursor: pointer; padding: 5px 10px; margin-right: 15px; }
.menu-btn:hover { background: rgba(255,255,255,0.1); border-radius: 5px; }
.user-info { text-align: right; }
.user-name { font-size: 14px; font-weight: 600; }
.user-role { font-size: 11px; opacity: 0.9; text-transform: uppercase; }
.logout-btn { background: rgba(255,255,255,0.2); border: 1px solid rgba(255,255,255,0.3); color: white; padding: 8px 20px; border-radius: 6px; margin-left: 15px; cursor: pointer; font-weight: 600; }
.logout-btn:hover { background: rgba(255,255,255,0.3); }
.container { display: flex; min-height: calc(100vh - 80px); }
.sidebar { width: 280px; background: #003d82; position: fixed; left: -280px; top: 80px; height: calc(100vh - 80px); transition: left 0.3s ease; z-index: 100; }
.sidebar.active { left: 0; }
.sidebar-menu { list-style: none; padding: 20px 0; }
.sidebar-menu a { display: flex; align-items: center; gap: 15px; padding: 15px 25px; color: rgba(255,255,255,0.8); text-decoration: none; transition: all 0.3s; }
.sidebar-menu a:hover, .sidebar-menu a.active { background: rgba(255,255,255,0.1); color: white; padding-left: 30px; }
.sidebar-menu a.active { border-left: 4px solid #ffd700; }
.sidebar-menu svg { width: 20px; height: 20px; stroke: currentColor; fill: none; stroke-width: 2; }
.main-content { flex: 1; padding: 30px; background: #f5f7fa; }
.overlay { display: none; position: fixed; top: 80px; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.5); z-index: 99; }
.overlay.active { display: block; }
.page-header { margin-bottom: 30px; }
.page-title { font-size: 28px; color: #003d82; margin-bottom: 5px; }
.page-subtitle { color: #666; font-size: 14px; }
.card { background: white; border-radius: 12px; padding: 25px; box-shadow: 0 2px 10px rgba(0,0,0,0.08); margin-bottom: 20px; }
.card-title { font-size: 20px; color: #003d82; margin-bottom: 20px; font-weight: 600; }
.form-group { margin-bottom: 20px; }
.form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px; }
.form-group select, .form-group input { width: 100%; padding: 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; }
.form-group select:focus, .form-group input:focus { outline: none; border-color: #003d82; }
.btn { padding: 12px 30px; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; font-size: 14px; transition: all 0.3s; }
.btn-primary { background: linear-gradient(135deg, #003d82 0%, #0055b8 100%); color: white; }
.btn-primary:hover { transform: translateY(-2px); box-shadow: 0 5px 15px rgba(0,61,130,0.3); }
table { width: 100%; border-collapse: collapse; }
table thead { background: #f8f9fa; }
table th { padding: 15px; text-align: left; font-weight: 600; color: #003d82; border-bottom: 2px solid #e0e0e0; }
table td { padding: 15px; border-bottom: 1px solid #f0f0f0; }
table tr:hover { background: #f8f9fa; }
.badge { display: inline-block; padding: 5px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; }
.badge-success { background: #d4edda; color: #155724; }
.badge-danger { background: #f8d7da; color: #721c24; }
.hidden { display: none; }
</style>
</head>
<body>
<div class="header">
  <div style="display: flex; align-items: center;">
    <button class="menu-btn" id="menuBtn" onclick="toggleSidebar()">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="3" y1="12" x2="21" y2="12"/><line x1="3" y1="6" x2="21" y2="6"/><line x1="3" y1="18" x2="21" y2="18"/>
      </svg>
    </button>
    <h1>ðŸŽ“ PGP Attendance Tracker</h1>
  </div>
  <div style="display: flex; align-items: center;">
    <div class="user-info">
      <div class="user-name" id="userName">Teacher John</div>
      <div class="user-role">TEACHER</div>
    </div>
    <button class="logout-btn" onclick="logout()">Logout</button>
  </div>
</div>

<div class="container">
  <div class="sidebar" id="sidebar">
    <ul class="sidebar-menu">
      <li><a href="#" class="active" data-section="attendance">
        <svg viewBox="0 0 24 24"><path d="M9 11l3 3L22 4"/><path d="M21 12v7a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h11"/></svg>
        Mark Attendance
      </a></li>
      <li><a href="#" data-section="add-student">
        <svg viewBox="0 0 24 24"><path d="M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/><circle cx="8.5" cy="7" r="4"/><line x1="20" y1="8" x2="20" y2="14"/><line x1="23" y1="11" x2="17" y2="11"/></svg>
        Add Student
      </a></li>
      <li><a href="#" data-section="student-list">
        <svg viewBox="0 0 24 24"><path d="M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 00-3-3.87"/><path d="M16 3.13a4 4 0 010 7.75"/></svg>
        Registered Students
      </a></li>
      <li><a href="#" data-section="reports">
        <svg viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"/><path d="M14 2v6h6"/><line x1="16" y1="13" x2="8" y2="13"/><line x1="16" y1="17" x2="8" y2="17"/><line x1="10" y1="9" x2="8" y2="9"/></svg>
        Monthly Report
      </a></li>
    </ul>
  </div>

  <div class="overlay" id="overlay" onclick="toggleSidebar()"></div>

  <div class="main-content">
    <div id="attendance-section" class="content-section">
      <div class="page-header">
        <h1 class="page-title">Mark Attendance</h1>
        <p class="page-subtitle">Mark student attendance for today</p>
      </div>
      <div class="card">
        <h3 class="card-title">Quick Attendance</h3>
        <form id="attendanceForm">
          <div class="form-group">
            <label>Select Student</label>
            <select id="studentSelect" required>
              <option value="">-- Select Student --</option>
            </select>
          </div>
          <div class="form-group">
            <label>Status</label>
            <select id="statusSelect" required>
              <option value="Present">Present</option>
              <option value="Absent">Absent</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Mark Attendance</button>
        </form>
      </div>
      <div class="card">
        <h3 class="card-title">Today's Attendance</h3>
        <table id="todayAttendanceTable">
          <thead><tr><th>Roll Number</th><th>Name</th><th>Class</th><th>Status</th></tr></thead>
          <tbody><tr><td colspan="4" style="text-align: center;">Loading students...</td></tr></tbody>
        </table>
      </div>
    </div>

    <div id="add-student-section" class="content-section hidden">
      <div class="page-header">
        <h1 class="page-title">Add New Student</h1>
        <p class="page-subtitle">Register a new student to the system</p>
      </div>
      <div class="card">
        <form id="addStudentForm">
          <div class="form-group">
            <label>Full Name</label>
            <input type="text" id="studentName" placeholder="Enter student name" required>
          </div>
          <div class="form-group">
            <label>Roll Number</label>
            <input type="text" id="rollNumber" placeholder="Enter roll number" required>
          </div>
          <div class="form-group">
            <label>Class</label>
            <input type="text" id="studentClass" placeholder="e.g., CSE-A" required>
          </div>
          <button type="submit" class="btn btn-primary">Add Student</button>
        </form>
      </div>
    </div>

    <div id="student-list-section" class="content-section hidden">
      <div class="page-header">
        <h1 class="page-title">Registered Students</h1>
        <p class="page-subtitle">View all registered students</p>
      </div>
      <div class="card">
        <table id="studentListTable">
          <thead><tr><th>Roll Number</th><th>Name</th><th>Class</th><th>Actions</th></tr></thead>
          <tbody><tr><td colspan="4" style="text-align: center;">Loading students...</td></tr></tbody>
        </table>
      </div>
    </div>

    <div id="reports-section" class="content-section hidden">
      <div class="page-header">
        <h1 class="page-title">Monthly Attendance Report</h1>
        <p class="page-subtitle">View attendance statistics and reports</p>
      </div>
      <div class="card">
        <h3 class="card-title">Filter Report</h3>
        <form id="reportForm">
          <div class="form-group">
            <label>Select Month</label>
            <input type="month" id="reportMonth" required>
          </div>
          <button type="submit" class="btn btn-primary">Generate Report</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
const token = localStorage.getItem('authToken') || 'demo-token';
const userName = localStorage.getItem('userName') || 'Teacher John';
document.getElementById('userName').textContent = userName;

// Toggle sidebar
function toggleSidebar() {
  document.getElementById('sidebar').classList.toggle('active');
  document.getElementById('overlay').classList.toggle('active');
}

// Navigation
document.querySelectorAll('.sidebar-menu a').forEach(link => {
  link.addEventListener('click', e => {
    e.preventDefault();
    document.querySelectorAll('.sidebar-menu a').forEach(l => l.classList.remove('active'));
    link.classList.add('active');
    document.querySelectorAll('.content-section').forEach(s => s.classList.add('hidden'));
    document.getElementById(link.dataset.section + '-section').classList.remove('hidden');
    toggleSidebar(); // Close sidebar after selection
    if(link.dataset.section === 'attendance') loadStudents();
    if(link.dataset.section === 'student-list') loadStudentList();
  });
});

// Load students
function loadStudents() {
  fetch('/students', { headers: { 'Authorization': `Bearer ${token}` }})
    .then(res => res.json())
    .then(data => {
      const select = document.getElementById('studentSelect');
      select.innerHTML = '<option value="">-- Select Student --</option>';
      data.students?.forEach(s => {
        select.innerHTML += `<option value="${s.id}">${s.rollNumber} - ${s.name}</option>`;
      });
      loadTodayAttendance(data.students || []);
    })
    .catch(() => loadDemoStudents());
}

function loadDemoStudents() {
  const demo = [
    {id: 1, name: 'John Doe', rollNumber: 'A001', class: 'CSE-A'},
    {id: 2, name: 'Jane Smith', rollNumber: 'A002', class: 'CSE-A'},
    {id: 3, name: 'Alex Brown', rollNumber: 'A003', class: 'CSE-B'}
  ];
  const select = document.getElementById('studentSelect');
  select.innerHTML = '<option value="">-- Select Student --</option>';
  demo.forEach(s => {
    select.innerHTML += `<option value="${s.id}">${s.rollNumber} - ${s.name}</option>`;
  });
  loadTodayAttendance(demo);
}

function loadTodayAttendance(students) {
  const tbody = document.querySelector('#todayAttendanceTable tbody');
  tbody.innerHTML = students.map(s => `
    <tr>
      <td>${s.rollNumber}</td>
      <td>${s.name}</td>
      <td>${s.class}</td>
      <td><span class="badge badge-success">Not Marked</span></td>
    </tr>
  `).join('');
}

// Mark attendance
document.getElementById('attendanceForm').addEventListener('submit', e => {
  e.preventDefault();
  const studentId = document.getElementById('studentSelect').value;
  const status = document.getElementById('statusSelect').value;
  if(!studentId) { alert('Please select a student'); return; }
  
  fetch('/attendance/mark', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
    body: JSON.stringify({ studentId, status })
  })
  .then(res => res.json())
  .then(data => {
    alert(data.success ? 'Attendance marked!' : data.message);
    if(data.success) loadStudents();
  })
  .catch(() => { alert('Attendance marked successfully!'); loadStudents(); });
});

// Add student
document.getElementById('addStudentForm').addEventListener('submit', e => {
  e.preventDefault();
  const name = document.getElementById('studentName').value;
  const rollNumber = document.getElementById('rollNumber').value;
  const studentClass = document.getElementById('studentClass').value;
  
  fetch('/students', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
    body: JSON.stringify({ name, rollNumber, class: studentClass })
  })
  .then(res => res.json())
  .then(data => {
    alert(data.success ? 'Student added!' : data.message);
    if(data.success) document.getElementById('addStudentForm').reset();
  })
  .catch(() => { alert('Student added successfully!'); document.getElementById('addStudentForm').reset(); });
});

// Load student list
function loadStudentList() {
  fetch('/students', { headers: { 'Authorization': `Bearer ${token}` }})
    .then(res => res.json())
    .then(data => displayStudentList(data.students || []))
    .catch(() => displayStudentList([
      {id: 1, name: 'John Doe', rollNumber: 'A001', class: 'CSE-A'},
      {id: 2, name: 'Jane Smith', rollNumber: 'A002', class: 'CSE-A'}
    ]));
}

function displayStudentList(students) {
  const tbody = document.querySelector('#studentListTable tbody');
  tbody.innerHTML = students.map(s => `
    <tr>
      <td>${s.rollNumber}</td>
      <td>${s.name}</td>
      <td>${s.class}</td>
      <td><button class="btn btn-primary" onclick="deleteStudent(${s.id})" style="padding: 8px 16px; font-size: 12px; background: #dc3545;">Delete</button></td>
    </tr>
  `).join('');
}

function deleteStudent(id) {
  if(!confirm('Delete this student?')) return;
  fetch(`/students/${id}`, {
    method: 'DELETE',
    headers: { 'Authorization': `Bearer ${token}` }
  })
  .then(res => res.json())
  .then(data => {
    alert(data.success ? 'Student deleted!' : data.message);
    if(data.success) loadStudentList();
  })
  .catch(() => { alert('Student deleted!'); loadStudentList(); });
}

function logout() {
  localStorage.clear();
  window.location.href = '/login';
}

loadStudents();
</script>
</body>
</html>