<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Student Management | PGP</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      max-width: 1600px;
      margin: 0 auto;
    }

    /* Header */
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(20px);
      padding: 24px 32px;
      border-radius: 20px;
      margin-bottom: 24px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.12);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .header-left h1 {
      font-size: 32px;
      font-weight: 800;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .role-badge {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 8px 18px;
      border-radius: 25px;
      font-size: 12px;
      font-weight: 700;
      letter-spacing: 1px;
      margin-top: 8px;
      display: inline-block;
    }

    .header-right {
      display: flex;
      gap: 12px;
    }

    .btn {
      padding: 12px 24px;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 600;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }

    .btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
    }

    .btn:active {
      transform: translateY(-1px);
    }

    .btn-primary {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
    }

    .btn-success {
      background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
      color: white;
    }

    .btn-warning {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      color: white;
    }

    .btn-danger {
      background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
      color: white;
    }

    .btn-outline {
      background: white;
      color: #667eea;
      border: 2px solid #667eea;
    }

    .btn-outline:hover {
      background: #667eea;
      color: white;
    }

    /* Stats Cards */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: 20px;
      margin-bottom: 24px;
    }

    .stat-card {
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(20px);
      padding: 28px;
      border-radius: 18px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.12);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .stat-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.18);
    }

    .stat-card .icon {
      width: 60px;
      height: 60px;
      border-radius: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 28px;
      margin-bottom: 18px;
    }

    .stat-card.students .icon {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .stat-card.classes .icon {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    }

    .stat-card .number {
      font-size: 42px;
      font-weight: 800;
      color: #2d3748;
      margin-bottom: 8px;
    }

    .stat-card .label {
      color: #718096;
      font-size: 15px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Content Section */
    .content-section {
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(20px);
      padding: 35px;
      border-radius: 20px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.12);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    /* Import Section */
    .import-section {
      background: linear-gradient(135deg, #e0f7fa 0%, #b2ebf2 100%);
      padding: 28px;
      border-radius: 16px;
      margin-bottom: 24px;
      border: 2px solid rgba(0, 105, 92, 0.1);
    }

    .import-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 18px;
    }

    .import-title {
      font-size: 20px;
      font-weight: 700;
      color: #00695c;
    }

    .file-upload-wrapper {
      display: flex;
      gap: 12px;
      align-items: center;
      flex-wrap: wrap;
    }

    .file-input-wrapper {
      position: relative;
      overflow: hidden;
      display: inline-block;
    }

    .file-input-wrapper input[type=file] {
      position: absolute;
      left: -9999px;
    }

    .file-input-label {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 13px 26px;
      background: white;
      color: #00695c;
      border: 2px solid #00695c;
      border-radius: 12px;
      cursor: pointer;
      font-weight: 700;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .file-input-label:hover {
      background: #00695c;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(0, 105, 92, 0.3);
    }

    .file-name {
      padding: 12px 18px;
      background: white;
      border-radius: 10px;
      color: #4a5568;
      font-size: 14px;
      font-weight: 600;
    }

    /* Filters Section */
    .filters-section {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      padding: 28px;
      border-radius: 16px;
      margin-bottom: 24px;
      border: 2px solid rgba(102, 126, 234, 0.1);
    }

    .filters-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 22px;
    }

    .filters-title {
      font-size: 20px;
      font-weight: 700;
      color: #2d3748;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .filter-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 18px;
    }

    .filter-group label {
      display: block;
      margin-bottom: 10px;
      font-weight: 700;
      color: #4a5568;
      font-size: 13px;
      text-transform: uppercase;
      letter-spacing: 0.8px;
    }

    .filter-group input,
    .filter-group select {
      width: 100%;
      padding: 14px 18px;
      border: 2px solid #e2e8f0;
      border-radius: 12px;
      font-size: 14px;
      transition: all 0.3s ease;
      background: white;
      font-weight: 500;
    }

    .filter-group input:focus,
    .filter-group select:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
      transform: translateY(-1px);
    }

    /* Action Bar */
    .action-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 28px;
      flex-wrap: wrap;
      gap: 16px;
    }

    .action-buttons {
      display: flex;
      gap: 12px;
      flex-wrap: wrap;
    }

    /* Search Bar */
    .search-wrapper {
      position: relative;
      flex: 1;
      min-width: 320px;
      max-width: 550px;
    }

    .search-input {
      width: 100%;
      padding: 16px 55px 16px 22px;
      border: 2px solid #e2e8f0;
      border-radius: 14px;
      font-size: 15px;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .search-input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
      transform: translateY(-1px);
    }

    .search-icon {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 18px;
    }

    /* Table */
    .table-wrapper {
      overflow-x: auto;
      border-radius: 14px;
      box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
    }

    thead {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    th {
      padding: 20px 22px;
      text-align: left;
      font-weight: 700;
      color: white;
      font-size: 13px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    tbody tr {
      border-bottom: 1px solid #e2e8f0;
      transition: all 0.3s ease;
    }

    tbody tr:hover {
      background: #f7fafc;
      transform: scale(1.005);
    }

    td {
      padding: 20px 22px;
      color: #4a5568;
      font-size: 15px;
      font-weight: 500;
    }

    td:first-child {
      font-weight: 700;
      color: #2d3748;
    }

    .class-badge {
      display: inline-block;
      padding: 8px 16px;
      background: linear-gradient(135deg, #e0e7ff 0%, #cfd9ff 100%);
      color: #4c51bf;
      border-radius: 10px;
      font-size: 13px;
      font-weight: 700;
      letter-spacing: 0.3px;
    }

    /* Modal */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.65);
      backdrop-filter: blur(8px);
      animation: fadeIn 0.3s ease;
    }

    .modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: white;
      padding: 45px;
      width: 90%;
      max-width: 650px;
      border-radius: 24px;
      box-shadow: 0 25px 70px rgba(0, 0, 0, 0.35);
      animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(60px) scale(0.95);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 35px;
    }

    .modal-title {
      font-size: 28px;
      font-weight: 800;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .modal-close {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      border: none;
      background: #f7fafc;
      color: #4a5568;
      font-size: 28px;
      cursor: pointer;
      transition: all 0.3s ease;
      font-weight: bold;
    }

    .modal-close:hover {
      background: #e2e8f0;
      transform: rotate(90deg);
    }

    .form-group {
      margin-bottom: 24px;
    }

    .form-group label {
      display: block;
      margin-bottom: 10px;
      font-weight: 700;
      color: #2d3748;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .form-group input {
      width: 100%;
      padding: 16px 20px;
      border: 2px solid #e2e8f0;
      border-radius: 12px;
      font-size: 15px;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .form-group input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
    }

    .form-buttons {
      display: flex;
      gap: 14px;
      margin-top: 35px;
    }

    .form-buttons .btn {
      flex: 1;
      padding: 16px 24px;
      font-size: 15px;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 70px 20px;
    }

    .empty-state-icon {
      font-size: 72px;
      margin-bottom: 22px;
      opacity: 0.7;
    }

    .empty-state-text {
      font-size: 20px;
      font-weight: 700;
      color: #718096;
    }

    /* Responsive */
    @media (max-width: 768px) {
      body {
        padding: 12px;
      }

      .header {
        flex-direction: column;
        gap: 16px;
        padding: 20px;
      }

      .header-left h1 {
        font-size: 24px;
      }

      .stats-grid {
        grid-template-columns: 1fr;
      }

      .action-bar {
        flex-direction: column;
        align-items: stretch;
      }

      .search-wrapper {
        max-width: 100%;
        min-width: 100%;
      }

      .filter-grid {
        grid-template-columns: 1fr;
      }

      .file-upload-wrapper {
        flex-direction: column;
        align-items: stretch;
      }

      .modal-content {
        padding: 30px;
      }

      table {
        font-size: 13px;
      }

      th, td {
        padding: 14px 12px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Header -->
    <div class="header">
      <div class="header-left">
        <h1>👥 Student Management</h1>
        <span class="role-badge" id="userRole">TEACHER</span>
      </div>
      <div class="header-right">
        <button class="btn btn-outline" onclick="alert('Go to Dashboard')">
          ← Dashboard
        </button>
        <button class="btn btn-danger" onclick="alert('Logout')">Logout</button>
      </div>
    </div>

    <!-- Stats -->
    <div class="stats-grid">
      <div class="stat-card students">
        <div class="icon">👨‍🎓</div>
        <div class="number" id="totalStudents">125</div>
        <div class="label">Total Students</div>
      </div>
      <div class="stat-card classes">
        <div class="icon">📚</div>
        <div class="number" id="totalClasses">8</div>
        <div class="label">Total Classes</div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="content-section">
      <!-- Import Section -->
      <div class="import-section">
        <div class="import-header">
          <span style="font-size: 28px;">📤</span>
          <h3 class="import-title">Bulk Import Students</h3>
        </div>
        <div class="file-upload-wrapper">
          <div class="file-input-wrapper">
            <input type="file" id="fileInput" accept=".csv,.xlsx,.xls" onchange="handleFileSelect(event)" />
            <label for="fileInput" class="file-input-label">
              <span>📁</span>
              Choose File (CSV/Excel)
            </label>
          </div>
          <span class="file-name" id="fileName">No file chosen</span>
          <button class="btn btn-success" onclick="uploadFile()" id="uploadBtn" disabled>
            <span>⬆️</span>
            Upload & Import
          </button>
          <button class="btn btn-primary" onclick="downloadTemplate()">
            <span>📥</span>
            Download Template
          </button>
        </div>
      </div>

      <!-- Filters -->
      <div class="filters-section">
        <div class="filters-header">
          <h3 class="filters-title">
            <span>🔍</span>
            Filter Students
          </h3>
          <button class="btn btn-outline" onclick="clearFilters()">Clear Filters</button>
        </div>
        <div class="filter-grid">
          <div class="filter-group">
            <label>Search by Name/Roll</label>
            <input type="text" id="searchInput" placeholder="Type to search..." onkeyup="applyFilters()" />
          </div>
          <div class="filter-group">
            <label>Class</label>
            <select id="classFilter" onchange="applyFilters()">
              <option value="">All Classes</option>
              <option value="CSE-A">CSE-A</option>
              <option value="CSE-B">CSE-B</option>
              <option value="ECE-A">ECE-A</option>
            </select>
          </div>
          <div class="filter-group">
            <label>Academic Year</label>
            <select id="yearFilter" onchange="applyFilters()">
              <option value="">All Years</option>
              <option value="2024">2024-2025</option>
              <option value="2023">2023-2024</option>
              <option value="2022">2022-2023</option>
            </select>
          </div>
          <div class="filter-group">
            <label>Status</label>
            <select id="statusFilter" onchange="applyFilters()">
              <option value="">All Status</option>
              <option value="active">Active</option>
              <option value="inactive">Inactive</option>
            </select>
          </div>
        </div>
      </div>

      <!-- Action Bar -->
      <div class="action-bar">
        <div class="search-wrapper">
          <input 
            type="text" 
            class="search-input" 
            id="quickSearch" 
            placeholder="Quick search students..." 
            onkeyup="applyFilters()"
          />
          <span class="search-icon">🔍</span>
        </div>
        <div class="action-buttons">
          <button class="btn btn-success" onclick="showAddModal()">
            <span>➕</span>
            Add Student
          </button>
          <button class="btn btn-primary" onclick="exportStudents()">
            <span>📊</span>
            Export Data
          </button>
        </div>
      </div>

      <!-- Table -->
      <div class="table-wrapper">
        <table id="studentTable">
          <thead>
            <tr>
              <th>Roll Number</th>
              <th>Name</th>
              <th>Class</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="studentTableBody">
            <tr>
              <td><strong>CS001</strong></td>
              <td>John Doe</td>
              <td><span class="class-badge">CSE-A</span></td>
              <td>
                <button class="btn btn-warning" onclick="editStudent(1)" style="padding: 10px 18px;">
                  ✏️ Edit
                </button>
                <button class="btn btn-danger" onclick="deleteStudent(1)" style="padding: 10px 18px;">
                  🗑️ Delete
                </button>
              </td>
            </tr>
            <tr>
              <td><strong>CS002</strong></td>
              <td>Jane Smith</td>
              <td><span class="class-badge">CSE-B</span></td>
              <td>
                <button class="btn btn-warning" onclick="editStudent(2)" style="padding: 10px 18px;">
                  ✏️ Edit
                </button>
                <button class="btn btn-danger" onclick="deleteStudent(2)" style="padding: 10px 18px;">
                  🗑️ Delete
                </button>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Add/Edit Student Modal -->
  <div id="studentModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title" id="modalTitle">Add Student</h2>
        <button class="modal-close" onclick="closeModal()">×</button>
      </div>
      <form id="studentForm" onsubmit="saveStudent(event)">
        <input type="hidden" id="studentId" />
        
        <div class="form-group">
          <label>Full Name *</label>
          <input type="text" id="studentName" required placeholder="John Doe" />
        </div>

        <div class="form-group">
          <label>Roll Number *</label>
          <input type="text" id="rollNumber" required placeholder="A001" />
        </div>

        <div class="form-group">
          <label>Class *</label>
          <input type="text" id="className" required placeholder="CSE-A" />
        </div>

        <div class="form-buttons">
          <button type="submit" class="btn btn-success">
            <span>💾</span>
            Save Student
          </button>
          <button type="button" class="btn btn-danger" onclick="closeModal()">
            <span>✖</span>
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    let selectedFile = null;

    function handleFileSelect(event) {
      selectedFile = event.target.files[0];
      if (selectedFile) {
        document.getElementById('fileName').textContent = selectedFile.name;
        document.getElementById('uploadBtn').disabled = false;
      } else {
        document.getElementById('fileName').textContent = 'No file chosen';
        document.getElementById('uploadBtn').disabled = true;
      }
    }

    function uploadFile() {
      if (selectedFile) {
        alert(`Uploading file: ${selectedFile.name}\n\nThis will import students from your CSV/Excel file.`);
        // Add your upload logic here
      }
    }

    function downloadTemplate() {
      alert('Downloading CSV template...\n\nTemplate will include columns:\n- Name\n- Roll Number\n- Class');
      // Add your template download logic here
    }

    function applyFilters() {
      console.log('Applying filters...');
      // Add your filter logic here
    }

    function clearFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('quickSearch').value = '';
      document.getElementById('classFilter').value = '';
      document.getElementById('yearFilter').value = '';
      document.getElementById('statusFilter').value = '';
      alert('All filters cleared!');
    }

    function showAddModal() {
      document.getElementById('modalTitle').textContent = 'Add New Student';
      document.getElementById('studentForm').reset();
      document.getElementById('studentId').value = '';
      document.getElementById('studentModal').classList.add('show');
    }

    function closeModal() {
      document.getElementById('studentModal').classList.remove('show');
    }

    function editStudent(id) {
      document.getElementById('modalTitle').textContent = 'Edit Student';
      document.getElementById('studentId').value = id;
      document.getElementById('studentName').value = 'John Doe';
      document.getElementById('rollNumber').value = 'CS001';
      document.getElementById('className').value = 'CSE-A';
      document.getElementById('studentModal').classList.add('show');
    }

    function deleteStudent(id) {
      if (confirm('Are you sure you want to delete this student?')) {
        alert(`Student ${id} deleted successfully!`);
        // Add your delete logic here
      }
    }

    function saveStudent(event) {
      event.preventDefault();
      const name = document.getElementById('studentName').value;
      const roll = document.getElementById('rollNumber').value;
      const className = document.getElementById('className').value;
      alert(`Student saved!\n\nName: ${name}\nRoll: ${roll}\nClass: ${className}`);
      closeModal();
    }

    function exportStudents() {
      alert('Exporting student data to Excel...');
      // Add your export logic here
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
      const modal = document.getElementById('studentModal');
      if (event.target == modal) {
        closeModal();
      }
    }
  </script>
</body>
</html>